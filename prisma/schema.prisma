// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}
model profileSubCategory {
  id          String @id @default(cuid())
  user_ID     String
  category    String
  subcategory String
}

model Review {
  id           String   @id @default(cuid())
  ReviewerID   String
  WorkerID     String
  Job_Id       String   @unique
  reviewText   String
  rating       Int
  date_created DateTime @default(now())
}

model Certificate {
  id           String   @id @default(cuid())
  user_ID      String
  name         String
  Link         String
  date_created DateTime @default(now())
}

model workGalleryPicture {
  id           String @id @default(cuid())
  user_ID      String
  cloudinaryID String
}

model user {
  id                     String                  @id @default(cuid())
  email                  String                  @unique
  password               String
  isAdmin                Boolean                 @default(false)
  role                   String                  @default("user")
  isClient               Boolean                 @default(false)
  isRepairman            Boolean                 @default(false)
  isProgrammer           Boolean                 @default(false)
  phoneNum               String
  name                   String
  coins                  Int                     @default(0)
  userNotificationConfig userNotificationConfig?
  //this one is used in a bit of a hacky way, 
  //since we never initialize it except in our Java haversin formula endpoint
  distance               Int?
  TravelRange            Int?                    @default(0)
  latitude               Decimal                 @default(0)
  longitude              Decimal                 @default(0)
  country                String                  @default("UK")
  profilePic             String?
}

model userNotificationConfig {
  id           String  @id @default(cuid())
  emailEnabled Boolean @default(false)
  pushEnabled  Boolean @default(false)
  user         user    @relation(fields: [userId], references: [id], onDelete:Cascade , onUpdate: Cascade )
  userId       String  @unique
  @@index([userId])
}

model category {
  id   String @id @default(cuid())
  name String @unique
}

model sub_category {
  id         String @id @default(cuid())
  name       String @unique
  categoryID String @db.Text
}

model question {
  id             String  @id @default(cuid())
  text_Question  String  @db.Text
  sub_categoryID String  @db.Text
  categoryID     String  @db.Text
  isOptional     Boolean
  answers        Json?
}

model answer {
  id             String @id @default(cuid())
  sub_categoryID String @db.Text
  categoryID     String @db.Text
  questionID     String @db.Text
  text_answer    String @db.Text
  //gbp
  moneycost      Int
  //days
  timecost       Int
  // question Question[]
}

model submitted_job {
  id                         String       @id @default(cuid())
  sub_categoryID             String       @db.Text
  categoryID                 String       @db.Text
  answeredQuestions          String       @db.Text
  //optional questions aren't really used here, need to delete this before production
  optional_answeredQuestions String?      @db.Text
  isVisible                  Boolean      @default(false)
  submittterEmail            String       @db.Text
  date_created               DateTime     @default(now())
  extrainfo                  String?      @db.Text
  timecost                   Int
  moneycost                  Int
  number_of_applications     Int          @default(0)
  //this one is used in a bit of a hacky way, 
  //since we never initialize it except in our Java haversin formula endpoint
  distance                   Int?
  latitude                   Decimal      @default(0)
  longitude                  Decimal      @default(0)
  ///
  title                      String?
  timing                     String?
  hiringstage                String?
  first_to_buy               Boolean?     @default(false)
  minBudget                  Int?         @default(0)
  maxBudget                  Int?         @default(10000)
  status                     String?
  finalWorkerID              String?
  postalCode                 String       @default("defaultAddress")

  pictures                   JobPicture[]
}

model JobPicture {
  id              String        @id @default(cuid())
  cloudinaryID    String
  submitted_job   submitted_job @relation(fields: [submitted_jobId], references: [id])
  submitted_jobId String
  @@index([submitted_jobId])

}

// a job that a user has applied to
model appliedJob {
  id              String   @id @default(cuid())
  submittedJob_ID String
  submitterEmail  String
  status          String?
  userID          String
  dateCreated     DateTime @default(now())
}

model tradesmanCandidate {
  id                   String  @id @default(cuid())
  userID               String
  email                String
  phoneNumber          String
  name                 String
  BusinessName         String
  BusinessAddress      String
  CompanyNumber        String
  Approved             Boolean @default(false)
  LiabilityLicenseLink String

  SubCategories tradesmanCandidateSubCategory[]
}

model tradesmanCandidateSubCategory {
  id          String @id @default(cuid())
  SubCategory String 
  categoryID  String @db.Text

  tradesmanCandidate   tradesmanCandidate? @relation(fields: [tradesmanCandidateId], references: [id] , onDelete:Cascade , onUpdate: Cascade)
  tradesmanCandidateId String?
  @@index([tradesmanCandidateId])
}

